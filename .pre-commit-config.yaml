# Pre-commit hooks for Silver Estimation App
# Install: pre-commit install
# Run manually: pre-commit run --all-files
# Update: pre-commit autoupdate

repos:
  # Code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--config=pyproject.toml]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--settings-path=pyproject.toml]

  # Linting with flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203 W503]
        additional_dependencies: [flake8-docstrings, flake8-bugbear]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--config-file=pyproject.toml]
        additional_dependencies:
          - PyQt5-stubs>=5.15.6
          - types-PyYAML>=6.0.0
        exclude: ^tests/

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Prevent large files from being committed
      - id: check-added-large-files
        args: [--maxkb=1000]

      # Check for files that would conflict in case-insensitive filesystems
      - id: check-case-conflict

      # Check for merge conflicts
      - id: check-merge-conflict

      # Check YAML files
      - id: check-yaml
        exclude: ^\.github/workflows/

      # Check TOML files
      - id: check-toml

      # Check JSON files
      - id: check-json

      # Ensure files end with newline
      - id: end-of-file-fixer
        exclude: ^(.*\.md|.*\.txt)$

      # Remove trailing whitespace
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]

      # Check for private keys
      - id: detect-private-key

      # Fix mixed line endings
      - id: mixed-line-ending
        args: [--fix=lf]
        exclude: ^(.*\.bat|.*\.ps1)$

      # Check Python syntax
      - id: check-ast

      # Check for debugger imports
      - id: debug-statements

  # Security checks with bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-c, pyproject.toml, -r, silverestimate]
        additional_dependencies: ["bandit[toml]"]

  # Check for common security issues
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
        files: pyproject.toml

# Configuration for pre-commit ci (if using pre-commit.ci service)
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [python-safety-dependencies-check]  # Skip in CI (requires network)
  submodules: false
