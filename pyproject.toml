[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "silverestimate"
version = "2.0.3"
description = "A desktop application for managing silver sales estimates with encrypted data storage"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "Proprietary"}
authors = [
    {name = "Silver Estimation App", email = ""}
]
keywords = ["silver", "estimation", "inventory", "pyqt5", "encryption"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Framework :: PyQt5",
    "Topic :: Office/Business",
]

dependencies = [
    "PyQt5>=5.15.10",
    "cryptography>=42.0.0",
    "passlib[argon2]>=1.7.4",
    "argon2_cffi>=21.3.0",
    "pyinstaller>=6.6.0",
    "hypothesis>=6.0.0",
    "keyring>=24.3.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-qt>=4.2.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.0.0",
    # Code Quality
    "black>=23.7.0",
    "flake8>=6.1.0",
    "pylint>=2.17.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    # Pre-commit hooks
    "pre-commit>=3.3.0",
    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    # Type stubs
    "types-PyYAML>=6.0.0",
    "PyQt5-stubs>=5.15.6",
    # Development tools
    "ipython>=8.14.0",
    "ipdb>=0.13.13",
]

[project.urls]
Homepage = "https://github.com/yourusername/SilverEstimate"
Documentation = "https://github.com/yourusername/SilverEstimate/tree/master/DOCS"
Repository = "https://github.com/yourusername/SilverEstimate"
"Bug Tracker" = "https://github.com/yourusername/SilverEstimate/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["silverestimate*"]
exclude = ["tests*", "scripts*", "build*", "dist*"]

[tool.black]
line-length = 88
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip = [".git", "__pycache__", "build", "dist", ".venv"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to true once type hints are added
disallow_incomplete_defs = false  # Set to true once type hints are added
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "^build/",
    "^dist/",
    "^tests/",
]

[[tool.mypy.overrides]]
module = [
    "PyQt5.*",
    "keyring.*",
    "passlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=silverestimate",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=50",  # Start at 50%, increase gradually
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["silverestimate"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
    "@abstractmethod",
]

[tool.pylint.main]
py-version = "3.11"
ignore = [".git", "__pycache__", "build", "dist"]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation (conflicts with black)
    "C0326",  # Bad whitespace (conflicts with black)
    "W0511",  # TODO/FIXME comments
    "R0903",  # Too few public methods
]

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-locals = 20

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = [
    "B101",  # assert_used - we use asserts in tests
    "B601",  # paramiko_calls - not using paramiko
]
