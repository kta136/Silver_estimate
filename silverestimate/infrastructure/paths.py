"""
Utilities for resolving file system paths within the application.

These helpers provide a single place to figure out where bundled assets live
both during local development (running from the source tree) and in packaged
builds generated by PyInstaller.
"""
from __future__ import annotations

from pathlib import Path
import sys


def get_app_root() -> Path:
    """
    Return the base directory where application resources are located.

    When running as a PyInstaller bundle, resources are extracted into the
    directory exposed via ``sys._MEIPASS``. During development this falls back
    to the repository root (two levels up from this module).
    """
    bundle_root = getattr(sys, "_MEIPASS", None)
    if bundle_root:
        return Path(bundle_root)
    return Path(__file__).resolve().parents[2]


def get_asset_path(*relative_parts: str) -> Path:
    """
    Build an absolute path to an asset located beneath the repository root.

    Args:
        *relative_parts: Path components inside the assets tree.

    Returns:
        Fully-qualified Path pointing at the requested asset.
    """
    return get_app_root().joinpath(*relative_parts)


__all__ = ["get_app_root", "get_asset_path"]
